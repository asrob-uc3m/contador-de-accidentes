#include <EEPROM.h>
#include <Time.h>
#include <TimeLib.h>
#include <Adafruit_NeoPixel.h>
#define PIN A1 //Designamos nuestro pin de datos para la tira led
#define NUMPIXELS 42 //Designamos cuantos pixeles tenemos en nuestra cinta led RGB
#define delayval 50 //Varisble para evitar una falsa pulsacion
#define rojo  pixels.Color(255, 0, 0) //color rojo
#define  verde  pixels.Color(0, 255, 0) //color verde
#define  azul  pixels.Color(0, 0, 50) //color azul
int timer1 = day(); 
const int buttonPin = 2;    // pin de la seta
int buttonState;             // the current reading from the input pin
unsigned long lastDebounceTime = 0;  // the last time the output pin was toggled
unsigned long debounceDelay = 50;    // the debounce time; increase if the output flickers
Adafruit_NeoPixel pixels = Adafruit_NeoPixel(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);
int derecha = EEPROM.read(0);
int izquierda = EEPROM.read(1);
int ledState = LOW;         // the current state of the output pin
int lastButtonState = LOW;   // the previous reading from the input pin
uint32_t apagado = pixels.Color(0, 0, 0);

void setup() {
  Serial.begin(9600);
  pixels.begin();
  pinMode(buttonPin, INPUT_PULLUP);
  numd(derecha);
  numi(izquierda);

}

void loop() {

  buttonState = digitalRead(buttonPin); //comprueba el estado de la seta

  if ((millis() - lastDebounceTime) > debounceDelay) { //este if es para evitar falsas pulsaciones de la seta
    lastDebounceTime = millis();
    if (buttonState != lastButtonState) { //si el estado dell boton ha cambiado
      lastButtonState = buttonState;
      if (buttonState == HIGH) { //en caso de que la seta se haya soltado reseteamos contador
        derecha = 0;
        izquierda = 0;
        for (int i = 0; i < 43; i++) { //bucle que apaga los pixels
          pixels.setPixelColor(i, apagado);
          pixels.show(); //actualiza el estado de los pixels
        }
        numd(derecha);
        numi(izquierda);
        EEPROM.update(0, derecha);
        EEPROM.update(1, izquierda);
      }
    }
  }

  // save the reading. Next time through the loop, it'll be the lastButtonState:
  if ( day() != timer1) {

    if(day()>0){
      timer1 = day();
    derecha++;
    if (derecha >= 10)
    {
      izquierda++;
      if (izquierda>=10)
      { 
        izquierda=0;
      }
      derecha = 0;
    }
    }

    for (int i = 0; i < 43; i++) {
      pixels.setPixelColor(i, apagado);
      pixels.show();
    }

    numd(derecha);
    numi(izquierda);
  }
}

void tira_uno(char color) {
  Serial.println("funciona, pulsado");
  pixels.setPixelColor(0, color); // Brillo moderado en rojo
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(1, color); // Brillo moderado en verde
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(2, color); // Brillo moderado en azul
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa po
} void tira_dos(char color) {
  Serial.println("funciona, pulsado");
  pixels.setPixelColor(3, color); // Brillo moderado en rojo
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(4, color); // Brillo moderado en verde
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(5, color); // Brillo moderado en azul
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa po
} void tira_tres(char color) {
  Serial.println("funciona, pulsado");
  pixels.setPixelColor(6, color); // Brillo moderado en rojo
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(7, color); // Brillo moderado en verde
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(8, color); // Brillo moderado en azul
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa po
} void tira_cuatro(char color) {
  Serial.println("funciona, pulsado");
  pixels.setPixelColor(9, color); // Brillo moderado en rojo
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(10, color); // Brillo moderado en verde
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(11, color); // Brillo moderado en azul
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa po
} void tira_cinco(char color) {
  Serial.println("funciona, pulsado");
  pixels.setPixelColor(12, color); // Brillo moderado en rojo
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(13, color); // Brillo moderado en verde
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(14, color); // Brillo moderado en azul
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa po
} void tira_seis(char color) {
  Serial.println("funciona, pulsado");
  pixels.setPixelColor(15, color); // Brillo moderado en rojo
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(16, color); // Brillo moderado en verde
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(17, color); // Brillo moderado en azul
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa po
} void tira_siete(char color) {
  Serial.println("funciona, pulsado");
  pixels.setPixelColor(18, color); // Brillo moderado en rojo
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(19, color); // Brillo moderado en verde
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(20, color); // Brillo moderado en azul
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa po
} void tira_ocho(char color) {
  Serial.println("funciona, pulsado");
  pixels.setPixelColor(21, color); // Brillo moderado en rojo
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(22, color); // Brillo moderado en verde
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(23, color); // Brillo moderado en azul
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa po
} void tira_nueve(char color) {
  Serial.println("funciona, pulsado");
  pixels.setPixelColor(24, color); // Brillo moderado en rojo
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(25, color); // Brillo moderado en verde
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(26, color); // Brillo moderado en azul
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa po
} void tira_diez(char color) {
  Serial.println("funciona, pulsado");
  pixels.setPixelColor(27, color); // Brillo moderado en rojo
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(28, color); // Brillo moderado en verde
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(29, color); // Brillo moderado en azul
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa po
} void tira_once(char color) {
  Serial.println("funciona, pulsado");
  pixels.setPixelColor(30, color); // Brillo moderado en rojo
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(31, color); // Brillo moderado en verde
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(32, color); // Brillo moderado en azul
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa po
} void tira_doce(char color) {
  Serial.println("funciona, pulsado");
  pixels.setPixelColor(33, color); // Brillo moderado en rojo
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(34, color); // Brillo moderado en verde
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(35, color); // Brillo moderado en azul
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa po
} void tira_trece(char color) {
  Serial.println("funciona, pulsado");
  pixels.setPixelColor(36, color); // Brillo moderado en rojo
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(37, color); // Brillo moderado en verde
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(38, color); // Brillo moderado en azul
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa po
} void tira_catorce(char color) {
  Serial.println("funciona, pulsado");
  pixels.setPixelColor(39, color); // Brillo moderado en rojo
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(40, color); // Brillo moderado en verde
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa por un periodo de tiempo (en milisegundos).

  pixels.setPixelColor(41, color); // Brillo moderado en azul
  pixels.show();   // Mostramos y actualizamos el color del pixel de nuestra cinta led RGB
  // Pausa po
}


void numd(int t) {


  switch (t) {
    case 0:
      tira_trece(azul);
      tira_doce(azul);
      tira_diez(azul);
      tira_nueve(azul);
      tira_ocho(azul);
      tira_catorce(azul);
    case 1:
      tira_catorce(azul);
      tira_diez (azul);
      break;
    case 2:
      tira_trece(azul);
      tira_catorce(azul);
      tira_once(azul);
      tira_ocho(azul);
      tira_nueve(azul);
      break;
    case 3:
      tira_trece(azul);
      tira_catorce(azul);
      tira_once(azul);
      tira_diez(azul);
      tira_nueve(azul);
      break;
    case 4:
      tira_doce(azul);
      tira_once(azul);
      tira_catorce(azul);
      tira_diez(azul);
      break;
    case 5:
      tira_trece(azul);
      tira_once(azul);
      tira_doce(azul);
      tira_diez(azul);
      tira_nueve(azul);
      break;
    case 6:
      tira_trece(azul);
      tira_ocho(azul);
      tira_once(azul);
      tira_doce(azul);
      tira_diez(azul);
      tira_nueve(azul);
      break;
    case 7:
      tira_trece(azul);
      tira_catorce(azul);
      tira_diez(azul);
      break;
    case 8:
      tira_trece(azul);
      tira_once(azul);
      tira_doce(azul);
      tira_diez(azul);
      tira_nueve(azul);
      tira_ocho(azul);
      tira_catorce(azul);
      break;
    case 9:
      tira_trece(azul);
      tira_once(azul);
      tira_doce(azul);
      tira_diez(azul);
      tira_catorce(azul);
      break;
  }
}
void numi(int t) {
  switch (t) {
    case 0:
      break;
    case 1:
      tira_siete(azul);
      tira_tres(azul);
      break;
    case 2:
      tira_seis(azul);
      tira_siete(azul);
      tira_cuatro(azul);
      tira_uno(azul);
      tira_dos(azul);
      break;
    case 3:
      tira_seis(azul);
      tira_siete(azul);
      tira_cuatro(azul);
      tira_tres(azul);
      tira_dos(azul);
      break;
    case 4:
      tira_siete(azul);
      tira_cuatro(azul);
      tira_tres(azul);
      tira_cinco(azul);
      break;
    case 5:
      tira_seis(azul);
      tira_cinco(azul);
      tira_cuatro(azul);
      tira_tres(azul);
      tira_dos(azul);
      break;
    case 6:
      tira_seis(azul);
      tira_cinco(azul);
      tira_cuatro(azul);
      tira_tres(azul);
      tira_dos(azul);
      tira_uno(azul);
      break;
    case 7:
      tira_seis(azul);
      tira_siete(azul);
      tira_tres(azul);
      break;
    case 8:
      tira_seis(azul);
      tira_cinco(azul);
      tira_cuatro(azul);
      tira_tres(azul);
      tira_dos(azul);
      tira_uno(azul);
      tira_siete(azul);
      break;
    case 9:
      tira_seis(azul);
      tira_cinco(azul);
      tira_cuatro(azul);
      tira_tres(azul);
      tira_siete(azul);
      break;
  }}
